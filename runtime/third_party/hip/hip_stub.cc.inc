// Auto-generated by tools/stub_codegen/generate.sh. Do not edit.

hipError_t hipDeviceSynchronize(void) {
  using FuncPtr = hipError_t (*)();
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceSynchronize"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr();
}

hipError_t hipGetDeviceCount(int *count) {
  using FuncPtr = hipError_t (*)(int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipGetDeviceCount"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(count);
}

hipError_t hipDeviceGetAttribute(int *pi, hipDeviceAttribute_t attr,
                                 int deviceId) {
  using FuncPtr = hipError_t (*)(int *, hipDeviceAttribute_t, int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGetAttribute"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(pi, attr, deviceId);
}

hipError_t hipDeviceGetLimit(size_t *pValue, enum hipLimit_t limit) {
  using FuncPtr = hipError_t (*)(size_t *, enum hipLimit_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGetLimit"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(pValue, limit);
}

hipError_t hipStreamCreateWithFlags(hipStream_t *stream, unsigned int flags) {
  using FuncPtr = hipError_t (*)(hipStream_t *, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamCreateWithFlags"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream, flags);
}

hipError_t hipStreamCreateWithPriority(hipStream_t *stream, unsigned int flags,
                                       int priority) {
  using FuncPtr = hipError_t (*)(hipStream_t *, unsigned int, int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamCreateWithPriority"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream, flags, priority);
}

hipError_t hipDeviceGetStreamPriorityRange(int *leastPriority,
                                           int *greatestPriority) {
  using FuncPtr = hipError_t (*)(int *, int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGetStreamPriorityRange"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(leastPriority, greatestPriority);
}

hipError_t hipStreamDestroy(hipStream_t stream) {
  using FuncPtr = hipError_t (*)(hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamDestroy"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream);
}

hipError_t hipStreamQuery(hipStream_t stream) {
  using FuncPtr = hipError_t (*)(hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamQuery"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream);
}

hipError_t hipStreamSynchronize(hipStream_t stream) {
  using FuncPtr = hipError_t (*)(hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamSynchronize"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream);
}

hipError_t hipStreamWaitEvent(hipStream_t stream, hipEvent_t event,
                              unsigned int flags) {
  using FuncPtr = hipError_t (*)(hipStream_t, hipEvent_t, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamWaitEvent"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream, event, flags);
}

hipError_t hipStreamGetFlags(hipStream_t stream, unsigned int *flags) {
  using FuncPtr = hipError_t (*)(hipStream_t, unsigned int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamGetFlags"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream, flags);
}

hipError_t hipStreamGetPriority(hipStream_t stream, int *priority) {
  using FuncPtr = hipError_t (*)(hipStream_t, int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipStreamGetPriority"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(stream, priority);
}

hipError_t hipEventCreateWithFlags(hipEvent_t *event, unsigned flags) {
  using FuncPtr = hipError_t (*)(hipEvent_t *, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipEventCreateWithFlags"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(event, flags);
}

hipError_t hipEventRecord(hipEvent_t event, hipStream_t stream) {
  using FuncPtr = hipError_t (*)(hipEvent_t, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipEventRecord"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(event, stream);
}

hipError_t hipEventDestroy(hipEvent_t event) {
  using FuncPtr = hipError_t (*)(hipEvent_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipEventDestroy"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(event);
}

hipError_t hipEventSynchronize(hipEvent_t event) {
  using FuncPtr = hipError_t (*)(hipEvent_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipEventSynchronize"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(event);
}

hipError_t hipEventElapsedTime(float *ms, hipEvent_t start, hipEvent_t stop) {
  using FuncPtr = hipError_t (*)(float *, hipEvent_t, hipEvent_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipEventElapsedTime"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ms, start, stop);
}

hipError_t hipEventQuery(hipEvent_t event) {
  using FuncPtr = hipError_t (*)(hipEvent_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipEventQuery"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(event);
}

hipError_t hipPointerGetAttributes(hipPointerAttribute_t *attributes,
                                   const void *ptr) {
  using FuncPtr = hipError_t (*)(hipPointerAttribute_t *, const void *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipPointerGetAttributes"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(attributes, ptr);
}

hipError_t hipMalloc(void **ptr, size_t size) {
  using FuncPtr = hipError_t (*)(void **, size_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMalloc"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ptr, size);
}

hipError_t hipHostMalloc(void **ptr, size_t size, unsigned int flags) {
  using FuncPtr = hipError_t (*)(void **, size_t, unsigned int);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipHostMalloc"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ptr, size, flags);
}

hipError_t hipMallocManaged(void **devPtr, size_t size,
                            unsigned int flags __dparm(0)) {
  using FuncPtr = hipError_t (*)(void **, size_t, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMallocManaged"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(devPtr, size, flags);
}

hipError_t hipHostGetDevicePointer(void **devPtr, void *hstPtr,
                                   unsigned int flags) {
  using FuncPtr = hipError_t (*)(void **, void *, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipHostGetDevicePointer"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(devPtr, hstPtr, flags);
}

hipError_t hipHostRegister(void *hostPtr, size_t sizeBytes,
                           unsigned int flags) {
  using FuncPtr = hipError_t (*)(void *, size_t, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipHostRegister"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(hostPtr, sizeBytes, flags);
}

hipError_t hipHostUnregister(void *hostPtr) {
  using FuncPtr = hipError_t (*)(void *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipHostUnregister"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(hostPtr);
}

hipError_t hipFree(void *ptr) {
  using FuncPtr = hipError_t (*)(void *);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipFree"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ptr);
}

hipError_t hipHostFree(void *ptr) {
  using FuncPtr = hipError_t (*)(void *);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipHostFree"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ptr);
}

hipError_t hipMemcpy(void *dst, const void *src, size_t sizeBytes,
                     hipMemcpyKind kind) {
  using FuncPtr = hipError_t (*)(void *, const void *, size_t, hipMemcpyKind);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMemcpy"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, src, sizeBytes, kind);
}

hipError_t hipMemcpyAsync(void *dst, const void *src, size_t sizeBytes,
                          hipMemcpyKind kind, hipStream_t stream __dparm(0)) {
  using FuncPtr =
      hipError_t (*)(void *, const void *, size_t, hipMemcpyKind, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMemcpyAsync"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, src, sizeBytes, kind, stream);
}

hipError_t hipMemset(void *dst, int value, size_t sizeBytes) {
  using FuncPtr = hipError_t (*)(void *, int, size_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMemset"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, value, sizeBytes);
}

hipError_t hipMemsetD32(hipDeviceptr_t dest, int value, size_t count) {
  using FuncPtr = hipError_t (*)(hipDeviceptr_t, int, size_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMemsetD32"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dest, value, count);
}

hipError_t hipMemsetAsync(void *dst, int value, size_t sizeBytes,
                          hipStream_t stream __dparm(0)) {
  using FuncPtr = hipError_t (*)(void *, int, size_t, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMemsetAsync"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, value, sizeBytes, stream);
}

hipError_t hipMemsetD32Async(hipDeviceptr_t dst, int value, size_t count,
                             hipStream_t stream __dparm(0)) {
  using FuncPtr = hipError_t (*)(hipDeviceptr_t, int, size_t, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMemsetD32Async"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, value, count, stream);
}

hipError_t hipMemGetInfo(size_t *free, size_t *total) {
  using FuncPtr = hipError_t (*)(size_t *, size_t *);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMemGetInfo"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(free, total);
}

hipError_t hipDeviceCanAccessPeer(int *canAccessPeer, int deviceId,
                                  int peerDeviceId) {
  using FuncPtr = hipError_t (*)(int *, int, int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceCanAccessPeer"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(canAccessPeer, deviceId, peerDeviceId);
}

hipError_t hipDeviceEnablePeerAccess(int peerDeviceId, unsigned int flags) {
  using FuncPtr = hipError_t (*)(int, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceEnablePeerAccess"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(peerDeviceId, flags);
}

hipError_t hipDeviceDisablePeerAccess(int peerDeviceId) {
  using FuncPtr = hipError_t (*)(int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceDisablePeerAccess"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(peerDeviceId);
}

hipError_t hipMemGetAddressRange(hipDeviceptr_t *pbase, size_t *psize,
                                 hipDeviceptr_t dptr) {
  using FuncPtr = hipError_t (*)(hipDeviceptr_t *, size_t *, hipDeviceptr_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMemGetAddressRange"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(pbase, psize, dptr);
}

hipError_t hipMemcpyPeer(void *dst, int dstDeviceId, const void *src,
                         int srcDeviceId, size_t sizeBytes) {
  using FuncPtr = hipError_t (*)(void *, int, const void *, int, size_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipMemcpyPeer"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, dstDeviceId, src, srcDeviceId, sizeBytes);
}

hipError_t hipMemcpyPeerAsync(void *dst, int dstDeviceId, const void *src,
                              int srcDevice, size_t sizeBytes,
                              hipStream_t stream __dparm(0)) {
  using FuncPtr =
      hipError_t (*)(void *, int, const void *, int, size_t, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipMemcpyPeerAsync"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dst, dstDeviceId, src, srcDevice, sizeBytes, stream);
}

hipError_t hipInit(unsigned int flags) {
  using FuncPtr = hipError_t (*)(unsigned int);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipInit"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(flags);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxCreate(hipCtx_t *ctx, unsigned int flags, hipDevice_t device) {
  using FuncPtr = hipError_t (*)(hipCtx_t *, unsigned int, hipDevice_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxCreate"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ctx, flags, device);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxDestroy(hipCtx_t ctx) {
  using FuncPtr = hipError_t (*)(hipCtx_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxDestroy"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ctx);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxSetCurrent(hipCtx_t ctx) {
  using FuncPtr = hipError_t (*)(hipCtx_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxSetCurrent"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ctx);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxGetCurrent(hipCtx_t *ctx) {
  using FuncPtr = hipError_t (*)(hipCtx_t *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxGetCurrent"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ctx);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxGetDevice(hipDevice_t *device) {
  using FuncPtr = hipError_t (*)(hipDevice_t *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxGetDevice"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(device);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxGetApiVersion(hipCtx_t ctx, int *apiVersion) {
  using FuncPtr = hipError_t (*)(hipCtx_t, int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxGetApiVersion"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(ctx, apiVersion);
}

DEPRECATED(DEPRECATED_MSG)
hipError_t hipCtxGetFlags(unsigned int *flags) {
  using FuncPtr = hipError_t (*)(unsigned int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipCtxGetFlags"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(flags);
}

hipError_t hipDevicePrimaryCtxGetState(hipDevice_t dev, unsigned int *flags,
                                       int *active) {
  using FuncPtr = hipError_t (*)(hipDevice_t, unsigned int *, int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDevicePrimaryCtxGetState"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dev, flags, active);
}

hipError_t hipDevicePrimaryCtxRelease(hipDevice_t dev) {
  using FuncPtr = hipError_t (*)(hipDevice_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDevicePrimaryCtxRelease"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dev);
}

hipError_t hipDevicePrimaryCtxRetain(hipCtx_t *pctx, hipDevice_t dev) {
  using FuncPtr = hipError_t (*)(hipCtx_t *, hipDevice_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDevicePrimaryCtxRetain"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(pctx, dev);
}

hipError_t hipDevicePrimaryCtxReset(hipDevice_t dev) {
  using FuncPtr = hipError_t (*)(hipDevice_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDevicePrimaryCtxReset"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dev);
}

hipError_t hipDevicePrimaryCtxSetFlags(hipDevice_t dev, unsigned int flags) {
  using FuncPtr = hipError_t (*)(hipDevice_t, unsigned int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDevicePrimaryCtxSetFlags"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(dev, flags);
}

hipError_t hipDeviceGet(hipDevice_t *device, int ordinal) {
  using FuncPtr = hipError_t (*)(hipDevice_t *, int);
  static auto func_ptr = reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGet"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(device, ordinal);
}

hipError_t hipDeviceGetName(char *name, int len, hipDevice_t device) {
  using FuncPtr = hipError_t (*)(char *, int, hipDevice_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGetName"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(name, len, device);
}

hipError_t hipDeviceGetPCIBusId(char *pciBusId, int len, int device) {
  using FuncPtr = hipError_t (*)(char *, int, int);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceGetPCIBusId"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(pciBusId, len, device);
}

hipError_t hipDeviceTotalMem(size_t *bytes, hipDevice_t device) {
  using FuncPtr = hipError_t (*)(size_t *, hipDevice_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDeviceTotalMem"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(bytes, device);
}

hipError_t hipDriverGetVersion(int *driverVersion) {
  using FuncPtr = hipError_t (*)(int *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipDriverGetVersion"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(driverVersion);
}

hipError_t hipModuleUnload(hipModule_t module) {
  using FuncPtr = hipError_t (*)(hipModule_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipModuleUnload"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(module);
}

hipError_t hipModuleGetFunction(hipFunction_t *function, hipModule_t module,
                                const char *kname) {
  using FuncPtr = hipError_t (*)(hipFunction_t *, hipModule_t, const char *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipModuleGetFunction"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(function, module, kname);
}

hipError_t hipFuncGetAttributes(struct hipFuncAttributes *attr,
                                const void *func) {
  using FuncPtr = hipError_t (*)(struct hipFuncAttributes *, const void *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipFuncGetAttributes"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(attr, func);
}

hipError_t hipModuleLoadData(hipModule_t *module, const void *image) {
  using FuncPtr = hipError_t (*)(hipModule_t *, const void *);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipModuleLoadData"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(module, image);
}

hipError_t hipModuleLoadDataEx(hipModule_t *module, const void *image,
                               unsigned int numOptions, hipJitOption *options,
                               void **optionValues) {
  using FuncPtr = hipError_t (*)(hipModule_t *, const void *, unsigned int,
                                 hipJitOption *, void **);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipModuleLoadDataEx"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(module, image, numOptions, options, optionValues);
}

hipError_t hipModuleLaunchKernel(hipFunction_t f, unsigned int gridDimX,
                                 unsigned int gridDimY, unsigned int gridDimZ,
                                 unsigned int blockDimX, unsigned int blockDimY,
                                 unsigned int blockDimZ,
                                 unsigned int sharedMemBytes,
                                 hipStream_t stream, void **kernelParams,
                                 void **extra) {
  using FuncPtr = hipError_t (*)(
      hipFunction_t, unsigned int, unsigned int, unsigned int, unsigned int,
      unsigned int, unsigned int, unsigned int, hipStream_t, void **, void **);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipModuleLaunchKernel"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY,
                  blockDimZ, sharedMemBytes, stream, kernelParams, extra);
}

hipError_t hipLaunchCooperativeKernel(const void *f, dim3 gridDim,
                                      dim3 blockDimX, void **kernelParams,
                                      unsigned int sharedMemBytes,
                                      hipStream_t stream) {
  using FuncPtr = hipError_t (*)(const void *, dim3, dim3, void **,
                                 unsigned int, hipStream_t);
  static auto func_ptr =
      reinterpret_cast<FuncPtr>(LoadSymbol("hipLaunchCooperativeKernel"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(f, gridDim, blockDimX, kernelParams, sharedMemBytes, stream);
}

hipError_t hipOccupancyMaxPotentialBlockSize(int32_t *gridSize,
                                             int32_t *blockSize,
                                             hipFunction_t f,
                                             size_t dynSharedMemPerBlk,
                                             uint32_t blockSizeLimit) {
  using FuncPtr =
      hipError_t (*)(int32_t *, int32_t *, hipFunction_t, size_t, uint32_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(
      LoadSymbol("hipOccupancyMaxPotentialBlockSize"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(gridSize, blockSize, f, dynSharedMemPerBlk, blockSizeLimit);
}

hipError_t hipOccupancyMaxActiveBlocksPerMultiprocessor(
    int32_t *numBlocks, hipFunction_t f, uint32_t blockSize,
    size_t dynSharedMemPerBlk) {
  using FuncPtr = hipError_t (*)(int32_t *, hipFunction_t, uint32_t, size_t);
  static auto func_ptr = reinterpret_cast<FuncPtr>(
      LoadSymbol("hipOccupancyMaxActiveBlocksPerMultiprocessor"));
  if (!func_ptr) return hipErrorSharedObjectInitFailed;
  return func_ptr(numBlocks, f, blockSize, dynSharedMemPerBlk);
}
